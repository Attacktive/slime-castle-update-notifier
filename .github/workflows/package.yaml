name: 'Package as a Docker Image'

on:
  push:
    tags:
      - '**'

env:
  REGISTRY: 'ghcr.io'
  IMAGE_NAME: "${{ github.repository }}"

jobs:
  package:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
      - name: 'Setup Docker Buildx'
        uses: 'docker/setup-buildx-action@v3'
      - name: 'Cache Docker Layers'
        uses: 'actions/cache@v4'
        with:
          path: '/tmp/.buildx-cache'
          key: "${{ runner.os }}-buildx-${{ github.sha }}"
          restore-keys: "${{ runner.os }}-buildx-"
      - name: 'Authenticate to GitHub Packages'
        uses: 'docker/login-action@v3'
        with:
          registry: 'ghcr.io'
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"
      - name: 'Build Docker Image'
        run: |
          sudo apt remove containerd.io
          sudo apt update
          sudo apt install -y containerd
          sudo systemctl enable docker --now
          docker build -t ghcr.io/${{ github.repository_owner }}/slime-castle-update-notifier:${{ github.ref_name }} .
      - name: 'Push Docker Image to GitHub Packages'
        run: 'docker push ghcr.io/${{ github.repository_owner }}/slime-castle-update-notifier:${{ github.ref_name }}'

#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
#
#       - name: Log in to the Container registry
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#
#       - name: Extract metadata for Docker
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#       - name: Build and push Docker image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           build-args: |
#             DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
#             DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }}
#             SLACK_TOKEN=${{ secrets.SLACK_TOKEN }}
#             SLACK_CHANNEL_ID=${{ secrets.SLACK_CHANNEL_ID }}
